"""empty message

Revision ID: 63dcfdb01908
Revises: 
Create Date: 2023-02-28 15:56:14.912376

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '63dcfdb01908'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=False)

    op.create_table('user_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('image_path', sa.String(), nullable=True),
    sa.Column('is_detected', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('upload_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_videos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('total_frame', sa.Integer(), nullable=True),
    sa.Column('fps_info', sa.Integer(), nullable=True),
    sa.Column('video_title', sa.String(), nullable=True),
    sa.Column('video_path', sa.String(), nullable=True),
    sa.Column('is_detected', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('detected_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('detected_images',
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.String(), nullable=True),
    sa.Column('detected_name', sa.String(), nullable=True),
    sa.Column('detected_score', sa.Float(), nullable=True),
    sa.Column('detected_x_min', sa.Float(), nullable=True),
    sa.Column('detected_y_min', sa.Float(), nullable=True),
    sa.Column('detected_x_max', sa.Float(), nullable=True),
    sa.Column('detected_y_max', sa.Float(), nullable=True),
    sa.Column('center_x', sa.Float(), nullable=True),
    sa.Column('center_y', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user_images.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('number')
    )
    op.create_table('detected_lists',
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.String(), nullable=True),
    sa.Column('fps_number', sa.Integer(), nullable=True),
    sa.Column('detected_name', sa.String(), nullable=True),
    sa.Column('detected_score', sa.Float(), nullable=True),
    sa.Column('detected_x_min', sa.Float(), nullable=True),
    sa.Column('detected_y_min', sa.Float(), nullable=True),
    sa.Column('detected_x_max', sa.Float(), nullable=True),
    sa.Column('detected_y_max', sa.Float(), nullable=True),
    sa.Column('center_x', sa.Float(), nullable=True),
    sa.Column('center_y', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user_videos.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('number')
    )
    op.create_table('index_videos',
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.String(), nullable=True),
    sa.Column('fps_number', sa.Integer(), nullable=True),
    sa.Column('detected_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user_videos.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('number')
    )
    op.create_table('relationship_tables',
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.String(), nullable=True),
    sa.Column('index_number', sa.Integer(), nullable=True),
    sa.Column('detected_name', sa.String(), nullable=True),
    sa.Column('detected_score', sa.Float(), nullable=True),
    sa.Column('center_x', sa.Float(), nullable=True),
    sa.Column('center_y', sa.Float(), nullable=True),
    sa.Column('r', sa.Float(), nullable=True),
    sa.Column('theta', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user_videos.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('number')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('relationship_tables')
    op.drop_table('index_videos')
    op.drop_table('detected_lists')
    op.drop_table('detected_images')
    op.drop_table('user_videos')
    op.drop_table('user_images')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
